{
"title" : "Big Data Right Now: Five Trendy Open Source Technologies",
"date" : "Sun, 28 Oct 2012 05:00:18 +0000",
"author" : "Tim Gasper"
}

<img width="100" height="70" src="http://tctechcrunch2011.files.wordpress.com/2012/10/screen-shot-2012-10-26-at-11-53-10-pm.png?w=100&amp;h=70&amp;crop=1" class="attachment-tc-carousel-river-thumb wp-post-image" alt="Screen Shot 2012-10-26 at 11.53.10 PM" title="Screen Shot 2012-10-26 at 11.53.10 PM" style="float: left; margin: 0 10px 7px 0;" /><p>Big Data is on every CIO’s mind this quarter, and for good reason. Companies will have spent $4.3 billion on Big Data technologies by the end of 2012.</p>
<p>But here’s where it gets interesting. Those initial investments will in turn trigger a <a target="_blank" href="http://www.informationweek.com/big-data/news/hardware-architectures/240009295/big-data-drives-big-it-spending">domino effect</a> of upgrades and new initiatives that are valued at $34 billion for 2013, per Gartner. Over a 5 year period, spend is <a target="_blank" href="http://blog.revolutionanalytics.com/2012/10/gartner-it-to-spend-232b-on-big-data-over-5-years.html">estimated at </a>$232 billion.</p>
<p>What you’re seeing right now is only the tip of a gigantic iceberg.</p>
<p>Big Data is presently synonymous with technologies like Hadoop, and the “NoSQL” class of databases including Mongo (document stores) and Cassandra (key-values).  Today it’s possible to stream <a target="_blank" href="http://gigaom.com/cloud/infochimps-makes-its-big-data-for-developers-platform-real-time/">real-time analytics</a> with ease. Spinning clusters <a target="_blank" href="http://vimeo.com/37279372">up and down</a> is a (relative) cinch, accomplished in 20 minutes or less. We have table stakes.</p>
<p>But there are new, untapped advantages and non-trivially large opportunities beyond these usual suspects.</p>
<p>Did you know that there are over 250K viable open source technologies on the market today? Innovation is all around us. The increasing complexity of systems, in fact, looks something like this:<br />
</p>
<p>We have a lot of&#8230;choices, to say the least.</p>
<p>What’s on our own radar, and what’s coming down the pipe for Fortune 2000 companies? What new projects are the most viable candidates for production-grade usage? Which deserve your undivided attention?</p>
<p>We did all the research and testing so you don’t have to. Let’s look at five new technologies that are shaking things up in Big Data. Here is the newest class of tools that you can’t afford to overlook, coming soon to an enterprise near you.</p>
<h3>Storm and Kafka</h3>
<p><a target="_blank" href="http://storm-project.net/">Storm</a> and <a target="_blank" href="http://incubator.apache.org/kafka/design.html">Kafka</a> are the future of stream processing, and they are already in use at a number of high-profile companies including Groupon, Alibaba, and The Weather Channel.</p>
<p>Born inside of Twitter, Storm is a “distributed real-time computation system”. Storm does for real-time processing what Hadoop did for batch processing. Kafka for its part is a messaging system developed at LinkedIn to serve as the foundation for their activity stream and the data processing pipeline behind it.</p>
<p>When paired together, you get the stream, you get it in-real time, and you get it at linear scale.</p>
<p><strong>Why should you care?</strong></p>
<p>With Storm and Kafka, you can conduct stream processing at linear scale, assured that every message gets processed in real-time, reliably. In tandem, Storm and Kafka can handle data velocities of tens of thousands of messages every second.</p>
<p>Stream processing solutions like Storm and Kafka have caught the attention of many enterprises due to their superior approach to ETL (extract, transform, load) and data integration.</p>
<p>Storm and Kafka are also great at in-memory analytics, and real-time decision support. Companies are quickly realizing that batch processing in Hadoop does not support real-time business needs. Real-time streaming analytics is a must-have component in any enterprise Big Data solution or stack, because of how elegantly they handle the “three V’s” &#8212; volume, velocity and variety.</p>
<p>Storm and Kafka are the two technologies on the list that we’re most committed to at Infochimps, and it is reasonable to expect that they’ll be a formal part of <a target="_blank" href="http://www.infochimps.com/how-it-works">our platform</a> soon.</p>
<h3>Drill and Dremel</h3>
<p><a target="_blank" href="http://gigaom.com/cloud/for-fast-interactive-hadoop-queries-drill-may-be-the-answer/">Drill </a>and <a target="_blank" href="http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/pubs/archive/36632.pdf">Dremel</a> make large-scale, ad-hoc querying of data possible, with radically lower latencies that are especially apt for data exploration. They make it possible to scan over petabytes of data in seconds, to answer ad hoc queries and presumably, power compelling visualizations.</p>
<p>Drill and Dremel put power in the hands of business analysts, and not just data engineers. The business side of the house will love Drill and Dremel.</p>
<p>Drill is the open source version of what Google is <a target="_blank" href="http://www.wired.com/wiredenterprise/2012/08/googles-dremel-makes-big-data-look-small/">doing with</a> Dremel (Google also offers Dremel-as-a-Service with its <a target="_blank" href="https://developers.google.com/bigquery/">BigQuery</a> offering). Companies are going to want to make the tool their own, which why Drill is the thing to watch mostly closely. Although it’s not quite there yet, strong interest by the development community is helping the tool mature rapidly.</p>
<p><strong>Why should you care?</strong></p>
<p>Drill and Dremel compare favorably to Hadoop for anything ad-hoc. Hadoop is all about batch processing workflows, which creates certain disadvantages.</p>
<p>The Hadoop ecosystem worked very hard to make MapReduce an approachable tool for ad hoc analyses. From <a target="_blank" href="http://research.google.com/archive/sawzall.html">Sawzall</a> to <a target="_blank" href="http://pig.apache.org/">Pig</a> and <a target="_blank" href="http://hive.apache.org/">Hive</a>, many interface layers have been built on top of Hadoop to make it more friendly, and business-accessible. Yet, for all of the SQL-like familiarity, these abstraction layers ignore one fundamental reality – MapReduce (and thereby Hadoop) is purpose-built for organized data processing (read: running jobs, or “workflows”).</p>
<p>What if you’re not worried about running jobs? What if you’re more concerned with asking questions and getting answers &#8212; slicing and dicing, looking for insights?</p>
<p>That’s “ad hoc exploration” in a nutshell &#8212; if you assume data that’s been processed already, how can you optimize for speed? You shouldn’t have to run a new job and wait, sometimes for considerable lengths of time, every time you want to ask a new question.</p>
<p>In stark contrast to workflow-based methodology, most business-driven BI and analytics queries are fundamentally ad hoc, interactive, low-latency analyses. Writing Map Reduce workflows is prohibitive for many business analysts. Waiting minutes for jobs to start and hours for workflows to complete is not conducive to an interactive experience of data, the comparing and contrasting, and the zooming in and out that ultimately creates fundamentally new insights.</p>
<p>Some data scientists even speculate that Drill and Dremel may actually be better than Hadoop in the wider sense, and a potential replacement, even. That&#8217;s a little too edgy a stance to embrace right now, but there is merit in an approach to analytics that is more query-oriented and low latency.</p>
<p>At Infochimps we like the <a target="_blank" href="http://www.elasticsearch.org/">Elasticsearch</a> full-text search engine and database for doing high-level data exploration, but for truly capable Big Data querying at the (relative) seat level, we think that Drill will become the de facto solution.</p>
<h3>R</h3>
<p>R is an open source statistical programming language. It is incredibly powerful. Over two million (and counting) analysts use R. It’s been around since 1997 if you can believe it. It is a modern version of the S language for statistical computing that originally came out of the Bell Labs. Today, R is quickly becoming the <a target="_blank" href="http://readwrite.com/2011/09/07/unlocking-big-data-with-r">new standard</a> for statistics.</p>
<p>R performs complex data science at a much smaller price (both literally and figuratively). R is making serious headway in ousting SAS and SPSS from their thrones, and has become the tool of choice for the world’s best statisticians (and data scientists, and analysts too).</p>
<p><strong>Why should you care?</strong></p>
<p>Because it has an unusually strong community around it, you can find R libraries for almost anything under the sun &#8212; making virtually any kind of data science capability accessible without new code. R is exciting because of who is working on it, and how much net-new innovation is happening on a daily basis. the R community is one of the most thrilling places to be in Big Data right now.</p>
<p>R is a also wonderful way to future-proof your Big Data program. In the last few months, literally thousands of new features have been introduced, replete with publicly available knowledge bases for every analysis type you&#8217;d want to do as an organization.</p>
<p>Also, R works <a target="_blank" href="http://blog.revolutionanalytics.com/2012/03/r-and-hadoop-step-by-step-tutorials.html">very well</a> with Hadoop, making it an ideal part of an integrated Big Data approach.</p>
<p>To keep an eye on: <a target="_blank" href="http://julialang.org/">Julia</a> is an interesting and growing alternative to R, because it combats R’s notoriously slow language interpreter problem. The community around Julia isn’t nearly as strong right now, but if you have a need for speed&#8230;</p>
<h3>Gremlin and Giraph</h3>
<p><a target="_blank" href="https://github.com/tinkerpop/gremlin">Gremlin</a> and <a target="_blank" href="http://incubator.apache.org/giraph/">Giraph</a> help empower graph analysis, and are often used coupled with graph databases like <a target="_blank" href="http://neo4j.org/">Neo4j</a> or <a target="_blank" href="http://www.infinitegraph.com/">InfiniteGraph</a>, or in the case of Giraph, working with Hadoop. <a target="_blank" href="http://goldenorbos.org/">Golden Orb</a> is another high-profile example of a graph-based project picking up steam.</p>
<p>Graph databases are pretty cutting edge. They have <a target="_blank" href="http://www.cloudera.com/blog/2010/11/do-the-schimmy-efficient-large-scale-graph-analysis-with-hadoop/">interesting differences</a> with relational databases, which mean that sometimes you might want to take a graph approach rather than a relational approach from the very beginning.</p>
<p>The common analogue for graph-based approaches is Google’s <a target="_blank" href="http://googleresearch.blogspot.com/2009/06/large-scale-graph-computing-at-google.html">Pregel</a>, of which Gremlin and Giraph are open source alternatives. In fact, here’s a <a target="_blank" href="http://www.wired.com/wiredenterprise/2012/08/google-as-xerox-parc/all/">great read</a> on how mimicry of Google technologies is a cottage industry unto itself.</p>
<p><strong>Why should you care?</strong></p>
<p>Graphs do a great job of modeling computer networks, and social networks, too &#8212; anything that links data together. Another common use is mapping, and geographic pathways &#8212; calculating shortest routes for example, from place A to place B (or to return to the social case, tracing the proximity of stated relationships from person A to person B).</p>
<p>Graphs are also popular for bioscience and physics use cases for this reason &#8212; they can chart molecular structures unusually well, for example.</p>
<p>Big picture, graph databases and analysis languages and frameworks are a great illustration of how the world is starting to realize that Big Data is not about having one database or one programming framework that accomplishes everything. Graph-based approaches are a killer app, so to speak, for anything that involves large networks with many nodes, and many linked pathways between those nodes.</p>
<p>The most innovative scientists and engineers know to apply the right tool for each job, making sure everything plays nice and can talk to each other (the glue in this sense becomes the core competence).</p>
<h3>SAP Hana</h3>
<p><a target="_blank" href="http://www.sap.com/solutions/technology/in-memory-computing-platform/hana/overview/index.epx">SAP Hana</a> is an in-memory analytics platform that includes an in-memory database and a suite of tools and software for creating analytical processes and moving data in and out, in the right formats.</p>
<p><strong>Why should you care?</strong></p>
<p>SAP is going against the grain of most entrenched enterprise mega-players by providing a very powerful open source product.  And it’s not only that &#8212; SAP is also creating meaningful incentives for startups to embrace Hana as well. They are authentically fostering community involvement and there is uniformly positive sentiment around Hana as a result.</p>
<p>Hana highly benefits any applications with unusually fast processing needs, such as financial modeling and decision support, website personalization, and fraud detection, among many other use cases.</p>
<p>The biggest drawback of Hana is that “in-memory” means that it by definition leverages access to solid state memory, which has clear advantages, but is much more expensive than conventional disk storage.</p>
<p>For organizations that don&#8217;t mind the added operational cost, Hana means incredible speed for very-low latency big data processing.</p>
<h3>Honorable mention: D3</h3>
<p><a target="_blank" href="http://d3js.org/">D3</a> doesn’t make the list quite yet, but it’s close, and worth mentioning for that reason.</p>
<p>D3 is a javascript document visualization library that revolutionizes how powerfully and creatively we can visualize information, and make data truly interactive. It was created by Michael Bostock and came out of his work at the New York Times, where he is the Graphics Editor.</p>
<p>For example, you can use D3 to generate an HTML table from an array of numbers. Or, you can use the same data to create an interactive  bar chart with smooth transitions and interaction.</p>
<p>Here’s <a target="_blank" href="http://www.nytimes.com/interactive/2012/02/13/us/politics/2013-budget-proposal-graphic.html">an example </a>of D3 in action, making President Obama’s 2013 budget proposal understandable, and navigable.</p>
<p>With D3, programmers can create dashboards galore. Organizations of all sizes are quickly embracing D3 as a superior visualization platform to the heads-up displays of yesteryear.</p>
<p><strong><em>Editor&#8217;s note:</em></strong> <em>Tim Gasper is the Product Manager at <a target="_blank" href="http://www.infochimps.com/">Infochimps</a>, the #1 Big Data platform in the cloud. He leads product marketing, product development, and customer discovery. Previously, he was co-founder and CMO at <a target="_blank" href="http://www.keepstream.com/">Keepstream</a>, a social media curation and analytics company that Infochimps acquired in August of 2010. You should follow him on Twitter <a target="_blank" href="https://twitter.com/timgasper">here</a>.</em></p>
<p><em> </em></p>
<br /> The original article was posted <a href="http://techcrunch.com/2012/10/27/big-data-right-now-five-trendy-open-source-technologies/">here</a>.